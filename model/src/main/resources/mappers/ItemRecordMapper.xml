<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.debug.steadyjack.mapper.ItemRecordMapper" >
  <resultMap id="BaseResultMap" type="com.debug.steadyjack.entity.ItemRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="item_no" property="itemNo" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="BIGINT" />
    <result column="purchase_date" property="purchaseDate" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, item_no, stock, purchase_date, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from item_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from item_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.debug.steadyjack.entity.ItemRecord" >
    insert into item_record (id, name, item_no, 
      stock, purchase_date, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{itemNo,jdbcType=VARCHAR}, 
      #{stock,jdbcType=BIGINT}, #{purchaseDate,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.debug.steadyjack.entity.ItemRecord" >
    insert into item_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="itemNo != null" >
        item_no,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="purchaseDate != null" >
        purchase_date,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null" >
        #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=BIGINT},
      </if>
      <if test="purchaseDate != null" >
        #{purchaseDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.debug.steadyjack.entity.ItemRecord" >
    update item_record
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="itemNo != null" >
        item_no = #{itemNo,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=BIGINT},
      </if>
      <if test="purchaseDate != null" >
        purchase_date = #{purchaseDate,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.debug.steadyjack.entity.ItemRecord" >
    update item_record
    set name = #{name,jdbcType=VARCHAR},
      item_no = #{itemNo,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=BIGINT},
      purchase_date = #{purchaseDate,jdbcType=DATE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>